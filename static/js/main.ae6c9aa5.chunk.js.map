{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Title/Title.module.css","components/Title/Title.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Title","title","className","styles","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","form","label","input","type","pattern","required","onChange","autoComplete","button","Component","Filter","ContactList","contacts","deleteContact","list","map","id","contactItem","text","onClick","App","filter","changeFilter","formSubmitHandler","contact","uuidv4","find","toLocaleLowerCase","alert","prevState","getFilteredContactList","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae6c9aa5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3rX5e\",\"label\":\"ContactForm_label__kJ5L4\",\"input\":\"ContactForm_input__1EnNS\",\"button\":\"ContactForm_button__2O_Lm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__8Oxj-\",\"contactItem\":\"ContactList_contactItem__36Aev\",\"text\":\"ContactList_text__a4NLV\",\"number\":\"ContactList_number__3oTLp\",\"button\":\"ContactList_button__1dxxy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2q3hP\",\"input\":\"Filter_input__3oUVu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1-3EW\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Title.module.css';\r\n\r\nfunction Title({title}) {\r\n    return (\r\n    <h1 className={styles.title}>{title}</h1>\r\n)    \r\n}\r\n\r\nexport default Title;\r\n\r\nTitle.propTypes = {\r\n    title: PropTypes.string\r\n}","import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n\r\n    state = { name: '', number: '' };\r\n    \r\n    handleChange = e => {\r\n\r\n        const { name, value } = e.currentTarget;\r\n        this.setState(\r\n            { [name]: value }\r\n        )\r\n    };\r\n\r\n    handleSubmit = e => {\r\n\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState(\r\n            { name: '', number: '' }\r\n        );\r\n    };\r\n\r\n    render() {\r\n        \r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n            <form className={styles.form} onSubmit={this.handleSubmit}>\r\n                <label className={styles.label}>\r\n                    Name\r\n                    <input\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </label>\r\n                <label className={styles.label}>\r\n                    Number\r\n                    <input\r\n                        className={styles.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={number}\r\n                        onChange={this.handleChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </label>\r\n                <button type='submit' className={styles.button}>Add contact</button>\r\n            </form> \r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.number\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nfunction Filter ({value, onChange}) {\r\n    return (\r\n        <label className={styles.label}>\r\n                    Find contacts by name\r\n                    <input\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </label>   \r\n    )\r\n}\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nfunction ContactList({contacts, deleteContact}) {\r\n    return (\r\n        <ul className={styles.list}>\r\n            {contacts.map(({ id, name, number }) => {\r\n                return (<li className={styles.contactItem} key={id}>\r\n                    <p className={styles.text}>{name}</p>\r\n                    <p className={styles.number}>{number}</p>\r\n                    <button\r\n                        className={styles.button}\r\n                        type='button'\r\n                        onClick={() => deleteContact(id)}>\r\n                        Delete\r\n                    </button>\r\n                </li>)\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.number\r\n}","import './App.css';\nimport { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Title from './components/Title';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n\n  state = {\n    contacts: [],\n    filter: ''\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value })\n  };\n  \n  formSubmitHandler = ({name, number}) => {\n     const contact = {\n      id: uuidv4(),\n      name,\n      number\n     };\n    \n    if (this.state.contacts.find(contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase())) {\n      alert(name + ' is already in contacts')\n      return;\n    };\n    \n   \n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contact],\n    }))\n  };\n\n\n  getFilteredContactList = () => {\n    const { contacts, filter } = this.state\n            return contacts.filter(\n      contact => contact.name.toLocaleLowerCase()\n        .includes(filter.toLocaleLowerCase())\n    )\n      \n  \n  }\n\n  deleteContact = (id) => {\n    this.setState(({ contacts }) => ({\n      \n        contacts: contacts.filter(contact => contact.id !== id)\n      \n    }))\n\n  }\n\n  render() {\n    return <div className=\"App\">\n\n      <Title title='Phonebook' />\n      \n      <ContactForm onSubmit={this.formSubmitHandler}/>\n      \n      <Title title='Contacts'/>\n      \n      <Filter value={this.state.filter} onChange={this.changeFilter} />\n      \n      <ContactList contacts={this.getFilteredContactList()} deleteContact={this.deleteContact}/>\n      \n  </div>\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}